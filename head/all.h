#include<math.h>
#include<stdlib.h>
#include<stdio.h>
#include<string.h>
//for networking
#include<sys/socket.h>
#include<netdb.h>
#include<netinet/in.h>
#include<arpa/inet.h>
#include<pcap.h>
#include<libnet.h>


void dump(char *d,int l){
int f=0,x,i=0;
char *tem=d;
while(i<l){
unsigned char a=*tem;
printf("%02x " ,a);
i++;
tem++;
while(i%16!=0){
if(i<l){
a=*tem;
printf("%02x " ,a);
tem++;
}
else{printf("   ");}
i++;
}
printf("| ");
while(d!=tem){
if(*d>31 && *d<127)
printf("%c" ,*d);
else printf(".");
d++;}
printf("\n");
}} 

void fatal(char *str){
char a[100];
strcpy(a,"Error:");
strcat(a,str);
strcat(a,"!");
perror(a);
exit(0);
}


int * findprime(int n,int *s){
int *fin,*a;
int sq,e=n;
a=(int *)malloc(sizeof(int)*(n-2));
sq=(int)sqrt((double)n);
for(int i=2;i<n;i++)
a[i-2]=i;

for(int i=0;i<=sq-2;i++){
int x=a[i];
if(x!=0){
for(int j=i;j<(int)ceil((double)n/x)-2;j++){
if(a[(j+2)*x-2]!=0)
{a[(j+2)*x-2]=0;
e--;}
}}}

fin=(int *)malloc(sizeof(int)*e-1);
*s=e-2;
*((char *)fin+sizeof(int)*e+1)='\0';
e=0;

for(int i=0;i<n;i++)
if(a[i]!=0){
fin[e]=a[i];
e++;}
free(a);
return fin;
}

void fatal(const char *a,const char *b){
printf("Error!! %s : %s" ,a,b);
exit(0);
}










