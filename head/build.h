#include"dec_head.h"



void build_eth(u_char *packet,u_char *mac_dest,u_char *mac_src){

struct eth_hdr *ether=(struct eth_hdr *)packet;

sscanf(mac_src,"%hhx:%hhx:%hhx:%hhx:%hhx:%hhx",&ether->eth_src_addr[0],&ether->eth_src_addr[1],&ether->eth_src_addr[2],&ether->eth_src_addr[3],&ether->eth_src_addr[4],&ether->eth_src_addr[5]);

sscanf(mac_dest,"%hhx:%hhx:%hhx:%hhx:%hhx:%hhx",&ether->eth_dest_addr[0],&ether->eth_dest_addr[1],&ether->eth_dest_addr[2],&ether->eth_dest_addr[3],&ether->eth_dest_addr[4],&ether->eth_dest_addr[5]);

ether->eth_type=htons(0x0806);
}



void build_arp(u_char *packet,u_char *mac_src,u_char *ip_src,u_char *mac_dest,u_char *ip_dest){

struct arp_hdr *arp = (struct arp_hdr *)packet;

sscanf(mac_src,"%hhx:%hhx:%hhx:%hhx:%hhx:%hhx",&arp->sha[0],&arp->sha[1],&arp->sha[2],&arp->sha[3],&arp->sha[4],&arp->sha[5]);

sscanf(mac_dest,"%hhx:%hhx:%hhx:%hhx:%hhx:%hhx",&arp->tha[0],&arp->tha[1],&arp->tha[2],&arp->tha[3],&arp->tha[4],&arp->tha[5]);

sscanf(ip_src,"%hhd.%hhd.%hhd.%hhd",&arp->spa[0],&arp->spa[1],&arp->spa[2],&arp->spa[3]);
sscanf(ip_dest,"%hhd.%hhd.%hhd.%hhd",&arp->tpa[0],&arp->tpa[1],&arp->tpa[2],&arp->tpa[3]);

arp->opcode=htons(2);
arp->plen=4;
arp->hlen=6;
arp->htype=htons(1);
arp->ptype=htons(2048);
}


