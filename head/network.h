#define ETHER_ADDR_LEN 6
#define ETHER_HEAD_LEN 14

struct eth_hdr{
unsigned char eth_dest_addr[ETHER_ADDR_LEN];
unsigned char eth_src_addr[ETHER_ADDR_LEN];
unsigned short eth_type;
};

struct ip_hdr{
unsigned char ip_head_len:4;
unsigned char ip_ver:4;
unsigned char ip_tos;
unsigned short ip_len;
unsigned short ip_id;
unsigned short ip_frag_offset;
unsigned char ip_ttl;
unsigned char ip_type;
unsigned short ip_checksum;
unsigned int ip_src_addr;
unsigned int ip_dest_addr;
};

struct tcp_hdr{
unsigned short tcp_src_port;
unsigned short tcp_dest_port;
unsigned int tcp_seq;
unsigned int tcp_ack;
unsigned char reserved:4;
unsigned char tcp_offset:4;
unsigned char tcp_flags;
#define TCP_FIN 0x01
#define TCP_SYN 0x02
#define TCP_RST 0x04
#define TCP_PUSH 0x08
#define TCP_ACK 0x10
#define TCP_URG 0x20
unsigned short tcp_window;
unsigned short tcp_checksum;
unsigned short tcp_urgent;
};


/* ARP Header, (assuming Ethernet+IPv4)            */ 
struct arp_hdr { 
#define ARP_REQUEST 1   /* ARP Request             */ 
#define ARP_REPLY 2     /* ARP Reply               */ 
    unsigned short htype;    /* Hardware Type           */ 
    unsigned short ptype;    /* Protocol Type           */ 
    unsigned char hlen;        /* Hardware Address Length */ 
    unsigned char plen;        /* Protocol Address Length */ 
    unsigned short opcode;     /* Operation Code          */ 
    unsigned char sha[6];      /* Sender hardware address */ 
    unsigned char spa[4];      /* Sender IP address       */ 
    unsigned char tha[6];      /* Target hardware address */ 
    unsigned char tpa[4];      /* Target IP address       */ 
};



